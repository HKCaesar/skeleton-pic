!-----------------------------------------------------------------------
! CUDA Fortran Library for Skeleton 2-1/2D Electromagnetic GPU PIC Code
! interface to C
! written by Viktor K. Decyk, UCLA
      module fgpubpush2_c
      use cudafor
      use iso_c_binding
      use fgpubpush2
      implicit none
      private
!
      contains
!
!-----------------------------------------------------------------------
      subroutine cgpubppush23l(ppart,fxy,bxy,kpic,qbm,dt,dtc,ek,idimp,  &
     &nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ipbc)                          &
     &bind(C,name='fgpubppush23l')
      implicit none
      integer(c_int), value :: idimp, nppmx, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ipbc
      real(c_float), value :: qbm, dt, dtc
      type (c_devptr), value :: ppart, fxy, bxy, kpic, ek
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_fxy, g_bxy
      integer, device, dimension(:), allocatable :: g_kpic
      real, device, dimension(:), allocatable :: g_ek
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(fxy,g_fxy,(/3,nxv,nyv/))
      call c_f_pointer(bxy,g_bxy,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call c_f_pointer(ek,g_ek,(/mxy1/))
      call fgpubppush23l(g_ppart,g_fxy,g_bxy,g_kpic,qbm,dt,dtc,g_ek,    &
     &idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ipbc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpubppushf23l(ppart,fxy,bxy,kpic,ncl,ihole,qbm,dt,dtc,&
     &ek,idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,irc)            &
     &bind(C,name='fgpubppushf23l')
      implicit none
      integer(c_int), value :: idimp, nppmx, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ntmax
      real(c_float), value :: qbm, dt, dtc
      type (c_devptr), value :: ppart, fxy, bxy, kpic, ncl, ihole, ek
      type (c_devptr), value :: irc
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_fxy, g_bxy
      integer, device, dimension(:), allocatable :: g_kpic
      integer, device, dimension(:,:), allocatable :: g_ncl
      integer, device, dimension(:,:,:), allocatable :: g_ihole
      real, device, dimension(:), allocatable :: g_ek
      integer, device, dimension(:), allocatable :: g_irc
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(fxy,g_fxy,(/3,nxv,nyv/))
      call c_f_pointer(bxy,g_bxy,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call c_f_pointer(ncl,g_ncl,(/8,mxy1/))
      call c_f_pointer(ihole,g_ihole,(/2,ntmax+1,mxy1/))
      call c_f_pointer(ek,g_ek,(/mxy1/))
      call c_f_pointer(irc,g_irc,(/1/))
      call fgpubppushf23l(g_ppart,g_fxy,g_bxy,g_kpic,g_ncl,g_ihole,qbm, &
     &dt,dtc,g_ek,idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,g_irc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpurbppush23l(ppart,fxy,bxy,kpic,qbm,dt,dtc,ci,ek,    &
     &idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ipbc)                    &
     &bind(C,name='fgpurbppush23l')
      implicit none
      integer(c_int), value :: idimp, nppmx, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ipbc
      real(c_float), value :: qbm, dt, dtc, ci
      type (c_devptr), value :: ppart, fxy, bxy, kpic, ek
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_fxy, g_bxy
      integer, device, dimension(:), allocatable :: g_kpic
      real, device, dimension(:), allocatable :: g_ek
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(fxy,g_fxy,(/3,nxv,nyv/))
      call c_f_pointer(bxy,g_bxy,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call c_f_pointer(ek,g_ek,(/mxy1/))
      call fgpurbppush23l(g_ppart,g_fxy,g_bxy,g_kpic,qbm,dt,dtc,ci,g_ek,&
     &idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ipbc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpurbppushf23l(ppart,fxy,bxy,kpic,ncl,ihole,qbm,dt,dtc&
     &,ci,ek,idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,irc)        &
     &bind(C,name='fgpurbppushf23l')
      implicit none
      integer(c_int), value :: idimp, nppmx, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ntmax
      real(c_float), value :: qbm, dt, dtc, ci
      type (c_devptr), value :: ppart, fxy, bxy, kpic, ncl, ihole, ek
      type (c_devptr), value :: irc
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_fxy, g_bxy
      integer, device, dimension(:), allocatable :: g_kpic
      integer, device, dimension(:,:), allocatable :: g_ncl
      integer, device, dimension(:,:,:), allocatable :: g_ihole
      real, device, dimension(:), allocatable :: g_ek
      integer, device, dimension(:), allocatable :: g_irc
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(fxy,g_fxy,(/3,nxv,nyv/))
      call c_f_pointer(bxy,g_bxy,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call c_f_pointer(ncl,g_ncl,(/8,mxy1/))
      call c_f_pointer(ihole,g_ihole,(/2,ntmax+1,mxy1/))
      call c_f_pointer(ek,g_ek,(/mxy1/))
      call c_f_pointer(irc,g_irc,(/1/))
      call fgpurbppushf23l(g_ppart,g_fxy,g_bxy,g_kpic,g_ncl,g_ihole,qbm,&
     &dt,dtc,ci,g_ek,idimp,nppmx,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,    &
     &g_irc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpu2ppost2l(ppart,q,kpic,qm,nppmx,idimp,mx,my,nxv,nyv,&
     &mx1,mxy1) bind(C,name='fgpu2ppost2l')
      implicit none
      integer(c_int), value :: nppmx, idimp, mx, my, nxv, nyv, mx1, mxy1
      real(c_float), value :: qm
      type (c_devptr), value :: ppart, q, kpic
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:), allocatable :: g_q
      integer, device, dimension(:), allocatable :: g_kpic
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(q,g_q,(/nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call fgpu2ppost2l(g_ppart,g_q,g_kpic,qm,nppmx,idimp,mx,my,nxv,nyv,&
     &mx1,mxy1)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpu2jppost2l(ppart,cu,kpic,qm,dt,nppmx,idimp,nx,ny,mx,&
     &my,nxv,nyv,mx1,mxy1,ipbc) bind(C,name='fgpu2jppost2l')
      implicit none
      integer(c_int), value :: nppmx, idimp, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ipbc
      real(c_float), value :: qm, dt
      type (c_devptr), value :: ppart, cu, kpic
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_cu
      integer, device, dimension(:), allocatable :: g_kpic
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(cu,g_cu,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call fgpu2jppost2l(g_ppart,g_cu,g_kpic,qm,dt,nppmx,idimp,nx,ny,mx,&
     &my,nxv,nyv,mx1,mxy1,ipbc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpu2jppostf2l(ppart,cu,kpic,ncl,ihole,qm,dt,nppmx,    &
     &idimp,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,irc)                     &
     &bind(C,name='fgpu2jppostf2l')
      implicit none
      integer(c_int), value :: nppmx, idimp, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ntmax
      real(c_float), value :: qm, dt
      type (c_devptr), value :: ppart, cu, kpic, ncl, ihole, irc
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_cu
      integer, device, dimension(:), allocatable :: g_kpic
      integer, device, dimension(:,:), allocatable :: g_ncl
      integer, device, dimension(:,:,:), allocatable :: g_ihole
      integer, device, dimension(:), allocatable :: g_irc
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(cu,g_cu,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call c_f_pointer(ncl,g_ncl,(/8,mxy1/))
      call c_f_pointer(ihole,g_ihole,(/2,ntmax+1,mxy1/))
      call c_f_pointer(irc,g_irc,(/1/))
      call fgpu2jppostf2l(g_ppart,g_cu,g_kpic,g_ncl,g_ihole,qm,dt,nppmx,&
     &idimp,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,g_irc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpu2rjppost2l(ppart,cu,kpic,qm,dt,ci,nppmx,idimp,nx,ny&
     &,mx,my,nxv,nyv,mx1,mxy1,ipbc) bind(C,name='fgpu2rjppost2l')
      implicit none
      integer(c_int), value :: nppmx, idimp, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ipbc
      real(c_float), value :: qm, dt, ci
      type (c_devptr), value :: ppart, cu, kpic
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_cu
      integer, device, dimension(:), allocatable :: g_kpic
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(cu,g_cu,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call fgpu2rjppost2l(g_ppart,g_cu,g_kpic,qm,dt,ci,nppmx,idimp,nx,ny&
     &,mx,my,nxv,nyv,mx1,mxy1,ipbc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpu2rjppostf2l(ppart,cu,kpic,ncl,ihole,qm,dt,ci,nppmx,&
     &idimp,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,irc)                     &
     &bind(C,name='fgpu2rjppostf2l')
      implicit none
      integer(c_int), value :: nppmx, idimp, nx, ny, mx, my, nxv, nyv
      integer(c_int), value :: mx1, mxy1, ntmax
      real(c_float), value :: qm, dt, ci
      type (c_devptr), value :: ppart, cu, kpic, ncl, ihole, irc
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart
      real, device, dimension(:,:,:), allocatable :: g_cu
      integer, device, dimension(:), allocatable :: g_kpic
      integer, device, dimension(:,:), allocatable :: g_ncl
      integer, device, dimension(:,:,:), allocatable :: g_ihole
      integer, device, dimension(:), allocatable :: g_irc
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mxy1/))
      call c_f_pointer(cu,g_cu,(/3,nxv,nyv/))
      call c_f_pointer(kpic,g_kpic,(/mxy1/))
      call c_f_pointer(ncl,g_ncl,(/8,mxy1/))
      call c_f_pointer(ihole,g_ihole,(/2,ntmax+1,mxy1/))
      call c_f_pointer(irc,g_irc,(/1/))
      call fgpu2rjppostf2l(g_ppart,g_cu,g_kpic,g_ncl,g_ihole,qm,dt,ci,  &
     &nppmx,idimp,nx,ny,mx,my,nxv,nyv,mx1,mxy1,ntmax,g_irc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpucaguard2l(qc,q,nx,ny,nxe,nye,nxvh,nyv)             &
     &bind(C,name='fgpucaguard2l')
      implicit none
      integer(c_int), value :: nx, ny, nxe, nye, nxvh, nyv
      type (c_devptr), value :: qc, q
! local data
      complex, device, dimension(:,:), allocatable :: g_qc
      real, device, dimension(:,:), allocatable :: g_q
      call c_f_pointer(qc,g_qc,(/nxvh,nyv/))
      call c_f_pointer(q,g_q,(/nxe,nye/))
      call fgpucaguard2l(g_qc,g_q,nx,ny,nxe,nye,nxvh,nyv)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpucacguard2l(cuc,cu,nx,ny,nxe,nye,nxvh,nyv)          &
     &bind(C,name='fgpucacguard2l')
      implicit none
      integer(c_int), value :: nx, ny, nxe, nye, nxvh, nyv
      type (c_devptr), value :: cuc, cu
! local data
      complex, device, dimension(:,:,:), allocatable :: g_cuc
      real, device, dimension(:,:,:), allocatable :: g_cu
      call c_f_pointer(cuc,g_cuc,(/nxvh,3,nyv/))
      call c_f_pointer(cu,g_cu,(/3,nxe,nye/))
      call fgpucacguard2l(g_cuc,g_cu,nx,ny,nxe,nye,nxvh,nyv)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpucbguard2l(bxyc,bxy,nx,ny,nxe,nye,nxvh,nyv)         &
     &bind(C,name='fgpucbguard2l')
      implicit none
      integer(c_int), value :: nx, ny, nxe, nye, nxvh, nyv
      type (c_devptr), value :: bxyc, bxy
! local data
      complex, device, dimension(:,:,:), allocatable :: g_bxyc
      real, device, dimension(:,:,:), allocatable :: g_bxy
      call c_f_pointer(bxyc,g_bxyc,(/nxvh,3,nyv/))
      call c_f_pointer(bxy,g_bxy,(/3,nxe,nye/))
      call fgpucbguard2l(g_bxyc,g_bxy,nx,ny,nxe,nye,nxvh,nyv)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpuppord2l(ppart,ppbuff,kpic,ncl,ihole,idimp,nppmx,nx,&
     &ny,mx,my,mx1,my1,npbmx,ntmax,irc) bind(C,name='fgpuppord2l')
      implicit none
      integer(c_int), value :: idimp, nppmx, nx, ny, mx, my, mx1, my1
      integer(c_int), value :: npbmx, ntmax
      type (c_devptr), value :: ppart, ppbuff, kpic, ncl, ihole, irc
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart, g_ppbuff
      integer, device, dimension(:), allocatable :: g_kpic
      integer, device, dimension(:,:), allocatable :: g_ncl
      integer, device, dimension(:,:,:), allocatable :: g_ihole
      integer, device, dimension(:), allocatable :: g_irc
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mx1*my1/))
      call c_f_pointer(ppbuff,g_ppbuff,(/npbmx,idimp,mx1*my1/))
      call c_f_pointer(kpic,g_kpic,(/mx1*my1/))
      call c_f_pointer(ncl,g_ncl,(/8,mx1*my1/))
      call c_f_pointer(ihole,g_ihole,(/2,ntmax+1,mx1*my1/))
      call c_f_pointer(irc,g_irc,(/1/))
      call fgpuppord2l(g_ppart,g_ppbuff,g_kpic,g_ncl,g_ihole,idimp,nppmx&
     &,nx,ny,mx,my,mx1,my1,npbmx,ntmax,g_irc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpuppordf2l(ppart,ppbuff,kpic,ncl,ihole,idimp,nppmx,  &
     &mx1,my1,npbmx,ntmax,irc) bind(C,name='fgpuppordf2l')
      implicit none
      integer(c_int), value :: idimp, nppmx, mx1, my1, npbmx, ntmax
      type (c_devptr), value :: ppart, ppbuff, kpic, ncl, ihole, irc
! local data
      real, device, dimension(:,:,:), allocatable :: g_ppart, g_ppbuff
      integer, device, dimension(:), allocatable :: g_kpic
      integer, device, dimension(:,:), allocatable :: g_ncl
      integer, device, dimension(:,:,:), allocatable :: g_ihole
      integer, device, dimension(:), allocatable :: g_irc
      call c_f_pointer(ppart,g_ppart,(/nppmx,idimp,mx1*my1/))
      call c_f_pointer(ppbuff,g_ppbuff,(/npbmx,idimp,mx1*my1/))
      call c_f_pointer(kpic,g_kpic,(/mx1*my1/))
      call c_f_pointer(ncl,g_ncl,(/8,mx1*my1/))
      call c_f_pointer(ihole,g_ihole,(/2,ntmax+1,mx1*my1/))
      call c_f_pointer(irc,g_irc,(/1/))
      call fgpuppordf2l(g_ppart,g_ppbuff,g_kpic,g_ncl,g_ihole,idimp,    &
     &nppmx,mx1,my1,npbmx,ntmax,g_irc)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpupois23t(qt,fxyt,ffct,we,nx,ny,nxvh,nyv,nxhd,nyhd)  &
     &bind(C,name='fgpupois23t')
      implicit none
      integer(c_int), value :: nx, ny, nxvh, nyv, nxhd, nyhd
      type (c_devptr), value :: qt, fxyt, ffct, we
! local data
      complex, device, dimension(:,:), allocatable :: g_qt
      complex, device, dimension(:,:,:), allocatable :: g_fxyt
      complex, device, dimension(:,:), allocatable :: g_ffct
      real, device, dimension(:), allocatable :: g_we
      call c_f_pointer(qt,g_qt,(/nyv,nxvh/))
      call c_f_pointer(fxyt,g_fxyt,(/nyv,3,nxvh/))
      call c_f_pointer(ffct,g_ffct,(/nyhd,nxhd/))
      call c_f_pointer(we,g_we,(/nxvh/))
      call fgpupois23t(g_qt,g_fxyt,g_ffct,g_we,nx,ny,nxvh,nyv,nxhd,nyhd)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpucuperp2t(cut,nx,ny,nxvh,nyv)                       &
     &bind(C,name='fgpucuperp2t')
      implicit none
      integer(c_int), value :: nx, ny, nxvh, nyv
      type (c_devptr), value :: cut
! local data
      complex, device, dimension(:,:,:), allocatable :: g_cut
      call c_f_pointer(cut,g_cut,(/nyv,3,nxvh/))
      call fgpucuperp2t(g_cut,nx,ny,nxvh,nyv)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpuibpois23t(cut,bxyt,ffct,ci,wm,nx,ny,nxvh,nyv,nxhd, &
     &nyhd) bind(C,name='fgpuibpois23t')
      implicit none
      integer(c_int), value :: nx, ny, nxvh, nyv, nxhd, nyhd
      real(c_float), value :: ci
      type (c_devptr), value :: cut, bxyt, ffct, wm
! local data
      complex, device, dimension(:,:,:), allocatable :: g_cut
      complex, device, dimension(:,:,:), allocatable :: g_bxyt
      complex, device, dimension(:,:), allocatable :: g_ffct
      real, device, dimension(:), allocatable :: g_wm
      call c_f_pointer(cut,g_cut,(/nyv,3,nxvh/))
      call c_f_pointer(bxyt,g_bxyt,(/nyv,3,nxvh/))
      call c_f_pointer(ffct,g_ffct,(/nyhd,nxhd/))
      call c_f_pointer(wm,g_wm,(/nxvh/))
      call fgpuibpois23t(g_cut,g_bxyt,g_ffct,ci,g_wm,nx,ny,nxvh,nyv,nxhd&
     &,nyhd)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpumaxwel2t(exyt,bxyt,cut,ffct,ci,dt,wf,wm,nx,ny,nxvh,&
     &nyv,nxhd,nyhd) bind(C,name='fgpumaxwel2t')
      implicit none
      integer(c_int), value :: nx, ny, nxvh, nyv, nxhd, nyhd
      real(c_float), value :: ci, dt
      type (c_devptr), value :: exyt, bxyt, cut, ffct, wf, wm
! local data
      complex, device, dimension(:,:,:), allocatable :: g_exyt, g_bxyt
      complex, device, dimension(:,:,:), allocatable :: g_cut
      complex, device, dimension(:,:), allocatable :: g_ffct
      real, device, dimension(:), allocatable :: g_wf, g_wm
      call c_f_pointer(exyt,g_exyt,(/nyv,3,nxvh/))
      call c_f_pointer(bxyt,g_bxyt,(/nyv,3,nxvh/))
      call c_f_pointer(cut,g_cut,(/nyv,3,nxvh/))
      call c_f_pointer(ffct,g_ffct,(/nyhd,nxhd/))
      call c_f_pointer(wf,g_wf,(/nxvh/))
      call c_f_pointer(wm,g_wm,(/nxvh/))
      call fgpumaxwel2t(g_exyt,g_bxyt,g_cut,g_ffct,ci,dt,g_wf,g_wm,nx,ny&
     &,nxvh,nyv,nxhd,nyhd)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpuemfield2t(fxyt,exyt,ffct,isign,nx,ny,nxvh,nyv,nxhd,&
     &nyhd) bind(C,name='fgpuemfield2t')
      implicit none
      integer(c_int), value :: isign, nx, ny, nxvh, nyv, nxhd, nyhd
      type (c_devptr), value :: fxyt, exyt, ffct
! local data
      complex, device, dimension(:,:,:), allocatable :: g_fxyt, g_exyt
      complex, device, dimension(:,:), allocatable :: g_ffct
      call c_f_pointer(fxyt,g_fxyt,(/nyv,3,nxvh/))
      call c_f_pointer(exyt,g_exyt,(/nyv,3,nxvh/))
      call c_f_pointer(ffct,g_ffct,(/nyhd,nxhd/))
      call fgpuemfield2t(g_fxyt,g_exyt,g_ffct,isign,nx,ny,nxvh,nyv,nxhd,&
     &nyhd)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpuwfft2rcs(f,g,isign,mixup,sct,indx,indy,nxhd,nyd,   &
     &nxhyd,nxyhd) bind(C,name='fgpuwfft2rcs')
      implicit none
      integer(c_int), value :: isign, indx, indy, nxhd, nyd
      integer(c_int), value :: nxhyd, nxyhd
      type (c_devptr), value :: f, g, mixup, sct
! local data
      complex, device, dimension(:,:), allocatable :: g_f, g_g
      integer, device, dimension(:), allocatable :: g_mixup
      complex, device, dimension(:), allocatable :: g_sct
      call c_f_pointer(f,g_f,(/nxhd,nyd/))
      call c_f_pointer(g,g_g,(/nyd,nxhd/))
      call c_f_pointer(mixup,g_mixup,(/nxhyd/))
      call c_f_pointer(sct,g_sct,(/nxyhd/))
      call fgpuwfft2rcs(g_f,g_g,isign,g_mixup,g_sct,indx,indy,nxhd,nyd, &
     &nxhyd,nxyhd)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpuwfft2rcsn(fn,gn,isign,mixup,sct,indx,indy,ndim,nxhd&
     &,nyd,nxhyd,nxyhd) bind(C,name='fgpuwfft2rcsn')
      implicit none
      integer(c_int), value :: isign, indx, indy, ndim, nxhd, nyd
      integer(c_int), value :: nxhyd, nxyhd
      type (c_devptr), value :: fn, gn, mixup, sct
! local data
      complex, device, dimension(:,:,:), allocatable :: g_fn, g_gn
      integer, device, dimension(:), allocatable :: g_mixup
      complex, device, dimension(:), allocatable :: g_sct
      call c_f_pointer(fn,g_fn,(/nxhd,ndim,nyd/))
      call c_f_pointer(gn,g_gn,(/nyd,ndim,nxhd/))
      call c_f_pointer(mixup,g_mixup,(/nxhyd/))
      call c_f_pointer(sct,g_sct,(/nxyhd/))
      call fgpuwfft2rcsn(g_fn,g_gn,isign,g_mixup,g_sct,indx,indy,ndim,  &
     &nxhd,nyd,nxhyd,nxyhd)
      end subroutine
!
!-----------------------------------------------------------------------
      subroutine cgpusum2(a,sa,nx) bind(C,name='fgpusum2')
      implicit none
      integer(c_int), value :: nx
      type (c_devptr), value :: a, sa
! local data
      real, device, dimension(:), allocatable :: g_a, g_sa
      call c_f_pointer(a,g_a,(/nx/))
      call c_f_pointer(sa,g_sa,(/1/))
      call fgpusum2(g_a,g_sa,nx)
      end subroutine
!
      end module
