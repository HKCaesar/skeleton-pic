(sys:load "libs/external/nanomsg.xtm")

(bind-val LOCAL_SOCKET_ARRAY |64,i32|)
(bind-val LOCAL_SOCKET_ARRAY_SIZE i32 32)

(bind-func local_create_sockets
  (lambda (nsock:i32)
    (doloop (i nsock)
      (aset! LOCAL_SOCKET_ARRAY i (nnsock_create NN_REQ)))
    (set! LOCAL_SOCKET_ARRAY_SIZE nsock)))

(bind-func local_connect_sockets
  (lambda (start_port)
    (let ((port_forward_address:i8* (zalloc 256)))
      (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
        (sprintf port_forward_address "tcp://127.0.0.1:%d" (+ i start_port))
        (nnsock_connect (aref LOCAL_SOCKET_ARRAY i) port_forward_address)))))

(bind-func local_disconnect_sockets
  (lambda ()
    (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
      (nn_close (aref LOCAL_SOCKET_ARRAY i))
      (nn_shutdown (aref LOCAL_SOCKET_ARRAY i) 0))
    (set! LOCAL_SOCKET_ARRAY_SIZE 0:i32)))

(bind-func local_response_handler
  (lambda (node_index:i32 buf:i8* buflen:i64)
    (printf "received response from socket %d: %s\n" node_index buf)
    ;; put the parts back together
    void))

(bind-func local_nonblocking_nanomsg_loop
  (let ((sndbuflen:i64 1024)
        (sndbuf:i8* (zalloc sndbuflen))
        (rcvbuflen:i64 RESPONSE_MSG_SIZE)
        (rcvbuf:i8* (zalloc rcvbuflen))
        (continue #t))
    (sprintf sndbuf "ppic2_data")
    (lambda ()
      (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
        (let ((sock (aref LOCAL_SOCKET_ARRAY i)))
          (if (< sock 0)
              (nn_println_strerror)
              (let ((nrcvbytes (nn_recv sock rcvbuf rcvbuflen NN_DONTWAIT))
                    (nsndbytes (nn_send sock sndbuf sndbuflen 0)))
                ;; if we get some bytes, trigger the callback
                (if (> nrcvbytes 0)
                    (local_response_handler i rcvbuf rcvbuflen))))))
      (if continue
          (callback (+ (now) 500) local_nonblocking_nanomsg_loop)
          (begin
            (println "stopping local_nonblocking_nanomsg loop")
            0)))))

(bind-func local_send_to_node
  (lambda (node_idx msg msglen)
    (let ((sock (aref LOCAL_SOCKET_ARRAY node_idx))
          (bytes (nn_send sock msg msglen 0)))
      (if (or (< bytes 0) (< bytes (convert msglen)))
          (nn_println_strerror)
          void))))

(bind-func local_send_to_all
  (lambda (msg msglen)
    (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
      (let ((sock (aref LOCAL_SOCKET_ARRAY i))
            (bytes (nn_send sock msg msglen 0)))
        (if (or (< bytes 0) (< bytes (convert msglen)))
            (nn_println_strerror)
            void)))))

