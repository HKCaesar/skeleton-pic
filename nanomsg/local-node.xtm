(sys:load "libs/external/nanomsg.xtm")

(bind-val LOCAL_SOCKET_ARRAY |64,i32|)
(bind-val LOCAL_SOCKET_ARRAY_SIZE i32 32)

(bind-func local_create_sockets
  (lambda (nsock:i32)
    (doloop (i nsock)
      (aset! LOCAL_SOCKET_ARRAY i (nnsock_create NN_REQ)))
    (set! LOCAL_SOCKET_ARRAY_SIZE nsock)))

(bind-func local_connect_sockets
  (lambda (start_port)
    (let ((port_forward_address:i8* (zalloc 256)))
      (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
        (sprintf port_forward_address "tcp://127.0.0.1:%d" (+ i start_port))
        (nnsock_connect (aref LOCAL_SOCKET_ARRAY i) port_forward_address)))))

(bind-func local_disconnect_sockets
  (lambda ()
    (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
      (nn_close (aref LOCAL_SOCKET_ARRAY i))
      (nn_shutdown (aref LOCAL_SOCKET_ARRAY i) 0))
    (set! LOCAL_SOCKET_ARRAY_SIZE 0:i32)))

;; create & connect sockets
(local_create_sockets 1)
(local_connect_sockets 12000)

(bind-func local_response_handler
  (lambda (node_index:i32 buf:i8* buflen:i64)
    (printf "received response from socket %d\n" node_index)
    ;; put the parts back together
    void))

(bind-func local_nonblocking_read
  (let ((buflen:i64 1024)
        (buf:i8* (zalloc buflen)))
    (lambda ()
      (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
        (let ((sock (aref LOCAL_SOCKET_ARRAY i)))
          (if (< sock 0)
              (nn_println_strerror)
              (let ((nbytes (nn_recv sock buf buflen NN_DONTWAIT)))
                ;; if we get some bytes, trigger the callback
                (if (> nbytes 0)
                    (local_response_handler i buf buflen)))))))))

(bind-func local_nonblocking_read_loop
  (let ((continue #t))
    (lambda ()
      (local_nonblocking_read)
      (if continue
          (callback (+ (now) 500) local_nonblocking_read_loop)
          (begin
            (println "stopping local_nonblocking_read loop")
            0)))))

;; start the read loop running
(local_nonblocking_read_loop)

(bind-func local_send_to_node
  (lambda (node_idx msg msglen)
    (let ((sock (aref LOCAL_SOCKET_ARRAY node_idx))
          (bytes (nn_send sock msg msglen 0)))
      (if (or (< bytes 0) (< bytes (convert msglen)))
          (nn_println_strerror)
          void))))

(bind-func local_send_to_all
  (lambda (msg msglen)
    (doloop (i LOCAL_SOCKET_ARRAY_SIZE)
      (let ((sock (aref LOCAL_SOCKET_ARRAY i))
            (bytes (nn_send sock msg msglen 0)))
        (if (or (< bytes 0) (< bytes (convert msglen)))
            (nn_println_strerror)
            void)))))

;; try it out
(local_send_to_all "test" 5)

;; kill everything
;; (call-as-xtlang
;;  (nonblocking_read_loop.continue #f)
;;  (local_disconnect_sockets))

